name: Deploy container

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
#     runs-on: ARM64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up QEMU #(for support many platforms)
      uses: docker/setup-qemu-action@v1
      
    - name: Build Jar
      run: make    
    -
      name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - uses: docker/setup-buildx-action@v1
      id: buildx
      with:
        install: true
      
    - name: Build Docker container
      run: |
          docker build . 
          docker ps
          docker push ${{ secrets.DOCKER_IMAGE }}
          
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

#     - name: Publish to Registry
#       uses: elgohr/Publish-Docker-Github-Action@master
#       with:
#         name: ${{ secrets.DOCKER_IMAGE }}
#         username: ${{ secrets.DOCKERHUB_USER }}
#         password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
        
    - name: Deploy container via ssh command 2
      uses: cross-the-world/ssh-pipeline@master

      with:
        host: ${{ secrets.HOST_ADDRESS }}
        user: ${{ secrets.HOST_USER }}
        key: ${{ secrets.HOST_KEY }}
        port: ${{ secrets.HOST_PORT }}
        connect_timeout: 10s
        script: |
          docker pull ${{ secrets.DOCKER_IMAGE }}
          docker stop learning-tg-bot
          docker rm learning-tg-bot
          docker run ${{ secrets.DOCKER_RUNPARAMS }} ${{ secrets.DOCKER_IMAGE }}

#     - name: Deploy container via ssh command
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.HOST_ADDRESS }}
#         username: ${{ secrets.HOST_USER }}
#         port: ${{ secrets.HOST_PORT }}
#         key: ${{ secrets.HOST_KEY }}
#         script: |
#           docker pull ${{ secrets.DOCKER_IMAGE }}
#           docker stop learning-tg-bot
#           docker rm learning-tg-bot
#           docker run ${{ secrets.DOCKER_RUNPARAMS }} ${{ secrets.DOCKER_IMAGE }}
